ASSIGNMENT NO. 6
ANAND PRAKASH DWIVEDI
7312


WRITE A PL/SQL BLOCK OF CODE USING PARAMETERIZED CURSOR THAT WILL MERGE THE DATA AVAILABLE IN THE NEWLY CREATED TABLE N_ROLLCALL WITH THE DATA AVAILABLE IN THE TABLE O_ROLLCALL. IF THE DATA IN THE FIRST TABLE ALREADY EXIST IN THE SECOND TABLE THEN THAT DATA SHOULD BE SKIPPED. 
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| anand              |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> use anand;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed

mysql> create table old_roll(roll int,name varchar(10));
Query OK, 0 rows affected (0.20 sec)

mysql> create table new_roll(roll int,name varchar(10));
Query OK, 0 rows affected (0.24 sec)

mysql> insert into old_roll values(4,'d');
Query OK, 1 row affected (0.04 sec)

mysql> insert into old_roll values(3,'bcd');
Query OK, 1 row affected (0.02 sec)

mysql> insert into old_roll values(1,'bc');
Query OK, 1 row affected (0.08 sec)

mysql> insert into old_roll values(5,'bch');
Query OK, 1 row affected (0.02 sec)

mysql> insert into new_roll values(2,'b');
Query OK, 1 row affected (0.02 sec)

mysql> insert into new_roll values(5,'bch');
Query OK, 1 row affected (0.03 sec)

mysql> insert into new_roll values(1,'bc');
Query OK, 1 row affected (0.02 sec)

mysql> 
mysql> select * from old_roll;
+------+------+
| roll | name |
+------+------+
|    4 | d    |
|    3 | bcd  |
|    1 | bc   |
|    5 | bch  |
+------+------+
4 rows in set (0.00 sec)

mysql> select * from new_roll;
+------+------+
| roll | name |
+------+------+
|    2 | b    |
|    5 | bch  |
|    1 | bc   |
+------+------+
3 rows in set (0.00 sec)

mysql> delimiter $
mysql> create procedure roll_list()
    -> begin
    -> declare oldrollnumber int;
    -> declare oldname varchar(10);
    -> declare newrollnumber int;
    -> declare newname varchar(10);
    -> declare done int default false;
    -> declare c1 cursor for select roll,name from old_roll;
    -> declare c2 cursor for select roll,name from new_roll;
    -> declare continue handler for not found set done=true;
    -> open c1;
    -> loop1:loop
    -> fetch c1 into oldrollnumber,oldname;
    -> if done then
    -> leave loop1;
    -> end if;
    -> open c2;
    -> loop2:loop
    -> fetch c2 into newrollnumber,newname;
    -> if done then
    -> insert into new_roll values(oldrollnumber,oldname);
    -> set done=false;
    -> close c2;
    -> leave loop2;
    -> end if;
    -> if oldrollnumber=newrollnumber then
    -> leave loop2;
    -> end if;
    -> end loop;
    -> end loop;
    -> close c1;
    -> end $
Query OK, 0 rows affected (0.04 sec)

mysql> delimiter ;
mysql> call roll_list();
Query OK, 2 rows affected (0.02 sec)

mysql> select * from new_roll;
+------+------+
| roll | name |
+------+------+
|    2 | b    |
|    5 | bch  |
|    1 | bc   |
|    4 | d    |
|    3 | bcd  |
+------+------+
5 rows in set (0.00 sec)

mysql> notee
